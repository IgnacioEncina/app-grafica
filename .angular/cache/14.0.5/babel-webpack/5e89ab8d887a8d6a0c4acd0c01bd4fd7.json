{"ast":null,"code":"import { Chart } from 'chart.js';\nimport { default as Annotation } from 'chartjs-plugin-annotation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let GraficaComponent = /*#__PURE__*/(() => {\n  class GraficaComponent {\n    constructor() {\n      this.lineChartData = [{\n        data: [0, 0, 0, 0],\n        label: 'Ventas',\n        yAxisID: 'y-axis-1',\n        backgroundColor: 'rgba(255,0,0,0.3)',\n        borderColor: 'red',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n        fill: 'origin'\n      }];\n      this.lineChartLabels = ['Enero', 'Febrero', 'Marzo', 'Abril'];\n      this.lineChartType = 'line';\n      this.lineChartOptions = {\n        elements: {\n          line: {\n            tension: 0.5\n          }\n        },\n        scales: {\n          // We use this empty structure as a placeholder for dynamic theming.\n          x: {},\n          'y-axis-0': {\n            position: 'left'\n          },\n          'y-axis-1': {\n            position: 'right',\n            grid: {\n              color: 'rgba(255,0,0,0.3)'\n            },\n            ticks: {\n              color: 'red'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true\n          },\n          annotation: {\n            annotations: [{\n              type: 'line',\n              scaleID: 'x',\n              value: 'March',\n              borderColor: 'orange',\n              borderWidth: 2,\n              label: {\n                position: 'center',\n                enabled: true,\n                color: 'orange',\n                content: 'LineAnno',\n                font: {\n                  weight: 'bold'\n                }\n              }\n            }]\n          }\n        }\n      };\n      Chart.register(Annotation);\n    }\n\n    ngOnInit() {\n      setInterval(() => {\n        const newData = [Math.round(Math.random() * 100), Math.round(Math.random() * 100), Math.round(Math.random() * 100), Math.round(Math.random() * 100)];\n        this.lineChartData = [{\n          data: newData,\n          label: 'Ventas'\n        }];\n      }, 3000);\n    }\n\n  }\n\n  GraficaComponent.ɵfac = function GraficaComponent_Factory(t) {\n    return new (t || GraficaComponent)();\n  };\n\n  GraficaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GraficaComponent,\n    selectors: [[\"app-grafica\"]],\n    decls: 7,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-md-6\"], [2, \"display\", \"block\"], [\"baseChart\", \"\", \"width\", \"400\", \"height\", \"400\", 3, \"data\", \"options\", \"type\"]],\n    template: function GraficaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Grafica dinamica\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 2);\n        i0.ɵɵelement(6, \"canvas\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"data\", ctx.lineChartData)(\"options\", ctx.lineChartOptions)(\"type\", ctx.lineChartType);\n      }\n    },\n    dependencies: [i1.BaseChartDirective]\n  });\n  return GraficaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}